# Generated by Django 5.2.4 on 2025-08-05 14:21

import django.db.models.deletion
import django.utils.timezone
import mdeditor.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='', max_length=200, verbose_name='site name')),
                ('site_description', models.TextField(default='', max_length=1000, verbose_name='site description')),
                ('site_seo_description', models.TextField(default='', max_length=1000, verbose_name='site seo description')),
                ('site_keywords', models.TextField(default='', max_length=1000, verbose_name='site keywords')),
                ('article_sub_length', models.IntegerField(default=300, verbose_name='article sub length')),
                ('sidebar_article_count', models.IntegerField(default=10, verbose_name='sidebar article count')),
                ('sidebar_comment_count', models.IntegerField(default=5, verbose_name='sidebar comment count')),
                ('article_comment_count', models.IntegerField(default=5, verbose_name='article comment count')),
                ('show_google_adsense', models.BooleanField(default=False, verbose_name='show adsense')),
                ('google_adsense_codes', models.TextField(blank=True, default='', max_length=2000, null=True, verbose_name='adsense code')),
                ('open_site_comment', models.BooleanField(default=True, verbose_name='open site comment')),
                ('global_header', models.TextField(blank=True, default='', null=True, verbose_name='公共头部')),
                ('global_footer', models.TextField(blank=True, default='', null=True, verbose_name='公共尾部')),
                ('beian_code', models.CharField(blank=True, default='', max_length=2000, null=True, verbose_name='备案号')),
                ('analytics_code', models.TextField(default='', max_length=1000, verbose_name='网站统计代码')),
                ('show_gongan_code', models.BooleanField(default=False, verbose_name='是否显示公安备案号')),
                ('gongan_beiancode', models.TextField(blank=True, default='', max_length=2000, null=True, verbose_name='公安备案号')),
                ('comment_need_review', models.BooleanField(default=False, verbose_name='评论是否需要审核')),
            ],
            options={
                'verbose_name': 'Website configuration',
                'verbose_name_plural': 'Website configuration',
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='link name')),
                ('link', models.URLField(verbose_name='link')),
                ('sequence', models.IntegerField(unique=True, verbose_name='order')),
                ('is_enable', models.BooleanField(default=True, verbose_name='is show')),
                ('show_type', models.CharField(choices=[('i', 'index'), ('l', 'list'), ('p', 'post'), ('a', 'all'), ('s', 'slide')], default='i', max_length=1, verbose_name='show type')),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modify time')),
            ],
            options={
                'verbose_name': 'link',
                'verbose_name_plural': 'link',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='SideBar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='title')),
                ('content', models.TextField(verbose_name='content')),
                ('sequence', models.IntegerField(unique=True, verbose_name='order')),
                ('is_enable', models.BooleanField(default=True, verbose_name='is enable')),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation time')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modify time')),
            ],
            options={
                'verbose_name': 'sidebar',
                'verbose_name_plural': 'sidebar',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation time')),
                ('last_modify_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modify time')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='tag name')),
                ('slug', models.SlugField(blank=True, default='no-slug', max_length=60)),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation time')),
                ('last_modify_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modify time')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='category name')),
                ('slug', models.SlugField(blank=True, default='no-slug', max_length=60)),
                ('index', models.IntegerField(default=0, verbose_name='index')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.category', verbose_name='parent category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'category',
                'ordering': ['-index'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation time')),
                ('last_modify_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='modify time')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='title')),
                ('body', mdeditor.fields.MDTextField(verbose_name='body')),
                ('pub_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='publish time')),
                ('status', models.CharField(choices=[('d', 'Draft'), ('p', 'Published')], default='p', max_length=1, verbose_name='status')),
                ('comment_status', models.CharField(choices=[('o', 'Open'), ('c', 'Close')], default='o', max_length=1, verbose_name='comment status')),
                ('type', models.CharField(choices=[('a', 'Article'), ('p', 'Page')], default='a', max_length=1, verbose_name='type')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='views')),
                ('article_order', models.IntegerField(default=0, verbose_name='order')),
                ('show_toc', models.BooleanField(default=False, verbose_name='show toc')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.category', verbose_name='category')),
                ('tags', models.ManyToManyField(blank=True, to='blog.tag', verbose_name='tag')),
            ],
            options={
                'verbose_name': 'article',
                'verbose_name_plural': 'article',
                'ordering': ['-article_order', '-pub_time'],
                'get_latest_by': 'id',
            },
        ),
    ]
